[{"/Users/danielcox/github/encounter/encounter/src/index.tsx":"1","/Users/danielcox/github/encounter/encounter/src/reportWebVitals.ts":"2","/Users/danielcox/github/encounter/encounter/src/App.tsx":"3","/Users/danielcox/github/encounter/encounter/src/components/Landing.tsx":"4","/Users/danielcox/github/encounter/encounter/src/components/Buttons.tsx":"5","/Users/danielcox/github/encounter/encounter/src/components/Themes.tsx":"6","/Users/danielcox/github/encounter/encounter/src/components/Boxes.tsx":"7","/Users/danielcox/github/encounter/encounter/src/images/index.tsx":"8","/Users/danielcox/github/encounter/encounter/src/poems/index.tsx":"9"},{"size":500,"mtime":1642573490865,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1642573490867,"results":"12","hashOfConfig":"11"},{"size":3696,"mtime":1642574848147,"results":"13","hashOfConfig":"11"},{"size":3046,"mtime":1642573490789,"results":"14","hashOfConfig":"15"},{"size":680,"mtime":1642573490788,"results":"16","hashOfConfig":"11"},{"size":1070,"mtime":1642573490789,"results":"17","hashOfConfig":"11"},{"size":625,"mtime":1642573490788,"results":"18","hashOfConfig":"11"},{"size":124,"mtime":1642573490790,"results":"19","hashOfConfig":"11"},{"size":562,"mtime":1642573490866,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1mtvuvr",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"1qlds37",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"23"},"/Users/danielcox/github/encounter/encounter/src/index.tsx",[],["45","46"],"/Users/danielcox/github/encounter/encounter/src/reportWebVitals.ts",[],"/Users/danielcox/github/encounter/encounter/src/App.tsx",["47"],"// import React from 'react';\n// // import { BrowserRouter, Route } from 'react-router-dom';\n// import Landing from './components/Landing';\n//\n// import './App.css';\n\n// const App = () => (\n//     <StylesProvider injectFirst>\n//         {\n//             <BrowserRouter basename=\"React\">\n//                 <Route path=\"/\" component={Landing} exact />\n//             </BrowserRouter>\n//         }\n//     </StylesProvider>\n// );\n\n// export default App;\n\nimport React, { useEffect, useState } from 'react';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { PoetryBox, StanzaSpacing } from './components/Boxes';\nimport { BlueButton } from './components/Buttons';\nimport { HomeTheme } from './components/Themes';\nimport { youlie } from './poems';\nimport './App.css';\n\ntype stanzaProps = {\n    start: number;\n    end: number;\n};\n\nconst App = () => {\n    const [displayLine, setLine] = useState('');\n    const [stanzaStart, setStanzaStart] = useState(0);\n    const [stanzaEnd, setStanzaEnd] = useState(0);\n    const [display, setDisplay] = useState('');\n\n    var poems = [\n        {\n            title: 'you lie in the great listening',\n            author: 'Paul Celan',\n            translator: 'Pierre Jorris',\n            stanzas: [\n                { start: 0, end: 1 },\n                { start: 3, end: 6 },\n                { start: 8, end: 9 },\n                { start: 11, end: 13 },\n                { start: 15, end: 17 },\n            ],\n            poem: youlie,\n        },\n    ];\n\n    // function choosePoem() {\n\n    // }\n    function choose(num: number) {\n        var index = Math.floor(Math.random() * num);\n        return index;\n    }\n    function setSnL(stanzas: stanzaProps[]) {\n        var stanza = choose(stanzas.length);\n        var start = stanzas[stanza].start;\n        var end = stanzas[stanza].end;\n        var line = start + choose(end - start);\n        setStanzaStart(start);\n        setStanzaEnd(end);\n        setLine(youlie[line]);\n    }\n\n    const renderStanza = (start: number, end: number) => {\n        var lines = [];\n        for (let i = start; i <= end; i++) {\n            lines.push(<p>{youlie[i]}</p>);\n        }\n        return lines;\n    };\n\n    const renderPoem = () => {\n        var lines = [];\n        for (let i = 0; i <= youlie.length - 1; i++) {\n            if (youlie[i] === '') {\n                lines.push(<StanzaSpacing></StanzaSpacing>);\n            }\n            lines.push(<p>{youlie[i]}</p>);\n        }\n        return lines;\n    };\n    useEffect(() => {\n        setSnL(poems[0].stanzas);\n    }, []);\n\n    function chooseRender(displayState: string) {\n        if (displayState === '') {\n            return <p>{displayLine}</p>;\n        } else if (displayState === 'stanza') {\n            return <p>{renderStanza(stanzaStart, stanzaEnd)}</p>;\n        } else {\n            return <p>{renderPoem()}</p>;\n        }\n    }\n\n    function setthestate() {\n        if (display === '') {\n            setDisplay('stanza');\n        } else setDisplay('poem');\n    }\n\n    return (\n        <StylesProvider injectFirst>\n            <HomeTheme>\n                <div>\n                    <h1>Poetry as Encounter</h1>\n                    {display === 'poem' ? <h2>{poems[0].title}</h2> : null}\n                    {display === 'poem' ? <h3>{poems[0].author}</h3> : null}\n                </div>\n                <PoetryBox>{chooseRender(display)}</PoetryBox>\n                <BlueButton\n                    onClick={() => {\n                        setthestate();\n                    }}\n                >\n                    Proceed on your encounter\n                </BlueButton>\n            </HomeTheme>\n        </StylesProvider>\n    );\n};\n\nexport default App;\n","/Users/danielcox/github/encounter/encounter/src/components/Landing.tsx",["48"],"import React, { useEffect, useState } from 'react';\nimport { PoetryBox, StanzaSpacing } from 'components/Boxes';\nimport { BlueButton } from 'components/Buttons';\nimport { HomeTheme } from 'components/Themes';\nimport { youlie } from 'poems';\n\ntype stanzaProps = {\n    start: number;\n    end: number;\n};\n\nconst Landing = () => {\n    const [displayLine, setLine] = useState('');\n    const [stanzaStart, setStanzaStart] = useState(0);\n    const [stanzaEnd, setStanzaEnd] = useState(0);\n    const [display, setDisplay] = useState('');\n\n    var poems = [\n        {\n            title: 'you lie in the great listening',\n            author: 'Paul Celan',\n            translator: 'Pierre Jorris',\n            stanzas: [\n                { start: 0, end: 1 },\n                { start: 3, end: 6 },\n                { start: 8, end: 9 },\n                { start: 11, end: 13 },\n                { start: 15, end: 17 },\n            ],\n            poem: youlie,\n        },\n    ];\n\n    // function choosePoem() {\n\n    // }\n    function choose(num: number) {\n        var index = Math.floor(Math.random() * num);\n        return index;\n    }\n    function setSnL(stanzas: stanzaProps[]) {\n        var stanza = choose(stanzas.length);\n        var start = stanzas[stanza].start;\n        var end = stanzas[stanza].end;\n        var line = start + choose(end - start);\n        setStanzaStart(start);\n        setStanzaEnd(end);\n        setLine(youlie[line]);\n    }\n\n    const renderStanza = (start: number, end: number) => {\n        var lines = [];\n        for (let i = start; i <= end; i++) {\n            lines.push(<p>{youlie[i]}</p>);\n        }\n        return lines;\n    };\n\n    const renderPoem = () => {\n        var lines = [];\n        for (let i = 0; i <= youlie.length - 1; i++) {\n            if (youlie[i] === '') {\n                lines.push(<StanzaSpacing></StanzaSpacing>);\n            }\n            lines.push(<p>{youlie[i]}</p>);\n        }\n        return lines;\n    };\n    useEffect(() => {\n        setSnL(poems[0].stanzas);\n    }, []);\n\n    function chooseRender(displayState: string) {\n        if (displayState === '') {\n            return <p>{displayLine}</p>;\n        } else if (displayState === 'stanza') {\n            return <p>{renderStanza(stanzaStart, stanzaEnd)}</p>;\n        } else {\n            return <p>{renderPoem()}</p>;\n        }\n    }\n\n    function setthestate() {\n        if (display === '') {\n            setDisplay('stanza');\n        } else setDisplay('poem');\n    }\n    \n    return (\n        <HomeTheme>\n            <div>\n                <h1>Poetry as Encounter</h1>\n                {display === 'poem' ? <h2>{poems[0].title}</h2> : null}\n                {display === 'poem' ? <h3>{poems[0].author}</h3> : null}\n            </div>\n            <PoetryBox>{chooseRender(display)}</PoetryBox>\n            <BlueButton\n                onClick={() => {\n                    setthestate();\n                }}\n            >\n                Proceed on your encounter\n            </BlueButton>\n        </HomeTheme>\n    );\n};\n\nexport default Landing;\n","/Users/danielcox/github/encounter/encounter/src/components/Buttons.tsx",[],"/Users/danielcox/github/encounter/encounter/src/components/Themes.tsx",[],"/Users/danielcox/github/encounter/encounter/src/components/Boxes.tsx",["49"],"import styled from 'styled-components';\nimport Box from '@material-ui/core/Box';\nimport { paper, paper2 } from 'images';\n\nconst PoetryBox = styled(Box)`\n    /* background-color: #e2d1d1; // #6772e5; */\n    padding-left: 1%;\n    padding-right: 1%;\n    background: url(${paper2});\n    background-position: left top;\n    background-repeat: repeat;\n    border-radius: 25px;\n    border: 5px;\n    border-color: green;\n    color: black;\n    /* text-align: justify; */\n    /* &:hover {\n        background-color: #9d74d3;\n    } */\n`;\n\nconst StanzaSpacing = styled(Box)`\n    padding-top: 10px;\n`;\n\nexport { PoetryBox, StanzaSpacing };\n","/Users/danielcox/github/encounter/encounter/src/images/index.tsx",["50"],"import React from 'react';\nimport paper from './paper.jpeg';\nimport paper2 from './paper2.jpeg';\n\nexport { paper, paper2 };\n","/Users/danielcox/github/encounter/encounter/src/poems/index.tsx",["51"],"import React from 'react';\n\nconst youlie = [\n    'YOU LIE in the great listening,',\n    'ambushed, snowed in.',\n    '',\n    'Go to the Spree, go to the Havel,',\n    'go to the butcher hooks,',\n    'to the red apple stakes',\n    'from Sweden—',\n    '',\n    'Here comes the table with the presents,',\n    'he turns around an Eden—',\n    '',\n    'The man became a sieve, the woman',\n    'had to swim, the sow,',\n    'for herself, for none, for everyone—',\n    '',\n    'The Landwehr canal will not roar.',\n    'Nothing',\n    '\\tstalls',\n];\n\nexport { youlie };\n",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":91,"column":8,"nodeType":"58","endLine":91,"endColumn":10,"suggestions":"59"},{"ruleId":"56","severity":1,"message":"57","line":71,"column":8,"nodeType":"58","endLine":71,"endColumn":10,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":15},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},{"ruleId":"61","severity":1,"message":"65","line":1,"column":8,"nodeType":"63","messageId":"64","endLine":1,"endColumn":13},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'poems' and 'setSnL'. Either include them or remove the dependency array.","ArrayExpression",["68"],["69"],"@typescript-eslint/no-unused-vars","'paper' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"70","fix":"72"},"Update the dependencies array to be: [poems, setSnL]",{"range":"73","text":"74"},{"range":"75","text":"74"},[2552,2554],"[poems, setSnL]",[2017,2019]]